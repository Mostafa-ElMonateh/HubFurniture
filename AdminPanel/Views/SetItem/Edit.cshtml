@model SetItemViewModel
@{
    ViewData["Title"] = "Edit";
}

@inject IUnitOfWork UnitOfWork
@{
    var types = new SelectList(UnitOfWork.Repository<CategorySetType>().GetAllAsync().Result, "Id", "NameEnglish");
    var categories = new SelectList(UnitOfWork.Repository<Category>().GetAllAsync().Result, "Id", "NameEnglish");
}

<h1>Edit @Model.NameEnglish</h1>
<div class="container">
    <form method="post" asp-action="Edit" enctype="multipart/form-data">
        <input asp-for="Id" hidden />
       
        <partial name="CreateOrEditPartialView" model="Model"/>

        <input type="submit" value="Save" class="btn btn-primary mt-3"/>
        <a asp-action="Index" class="btn btn-light mt-3">Back To List</a>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            $('#typeSelect').hide();
            $('#labelTypeSelect').hide();

            $('#categorySelect').change(function () {
                var categoryId = $(this).val();
                if (categoryId) {
                    $.ajax({
                        url: '@Url.Action("GetTypesByCategoryId", "Set")',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        success: function (data) {
                            $('#typeSelect').empty();
                            $('#typeSelect').append($('<option>').val(null).text('-- Select Type --'));
                            $.each(data, function (index, item) {
                                $('#typeSelect').append($('<option>').val(item.id).text(item.nameEnglish));
                            });
                            $('#typeSelect').show();
                            $('#labelTypeSelect').show();
                        }
                    });
                } else {
                    $('#typeSelect').empty().hide();
                    $('#labelTypeSelect').hide();
                }
            });
        });
    </script>
}