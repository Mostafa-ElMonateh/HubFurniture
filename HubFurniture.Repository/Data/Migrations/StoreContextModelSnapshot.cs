// <auto-generated />
using System;
using HubFurniture.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HubFurniture.Repository.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryItemCategorySet", b =>
                {
                    b.Property<int>("CategoryItemsId")
                        .HasColumnType("int");

                    b.Property<int>("CategorySetsId")
                        .HasColumnType("int");

                    b.HasKey("CategoryItemsId", "CategorySetsId");

                    b.HasIndex("CategorySetsId");

                    b.ToTable("CategoryItemCategorySet");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Availability")
                        .HasColumnType("tinyint");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Suitability")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CategoryItemTypeId");

                    b.ToTable("CategoryItems");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryItemsTypes");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Availability")
                        .HasColumnType("tinyint");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategorySetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Suitability")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CategorySetTypeId");

                    b.ToTable("CategorySets");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategorySetsTypes");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CustomerReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryItemId")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySetId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryItemId");

                    b.HasIndex("CategorySetId");

                    b.ToTable("CustomerReviews");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryItemId")
                        .HasColumnType("int");

                    b.Property<int?>("CategorySetId")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryItemId");

                    b.HasIndex("CategorySetId");

                    b.ToTable("ProductPictures");
                });

            modelBuilder.Entity("CategoryItemCategorySet", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.CategoryItem", null)
                        .WithMany()
                        .HasForeignKey("CategoryItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HubFurniture.Core.Entities.CategorySet", null)
                        .WithMany()
                        .HasForeignKey("CategorySetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItem", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", "Category")
                        .WithMany("CategoryItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HubFurniture.Core.Entities.CategoryItemType", null)
                        .WithMany("CategoryItems")
                        .HasForeignKey("CategoryItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItemType", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", null)
                        .WithMany("CategoryItemsTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", "Category")
                        .WithMany("CategorySets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HubFurniture.Core.Entities.CategorySetType", null)
                        .WithMany("CategorySets")
                        .HasForeignKey("CategorySetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySetType", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", null)
                        .WithMany("CategorySetsTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CustomerReview", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.CategoryItem", null)
                        .WithMany("CustomerReviews")
                        .HasForeignKey("CategoryItemId");

                    b.HasOne("HubFurniture.Core.Entities.CategorySet", null)
                        .WithMany("CustomerReviews")
                        .HasForeignKey("CategorySetId");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductPicture", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.CategoryItem", null)
                        .WithMany("ProductPictures")
                        .HasForeignKey("CategoryItemId");

                    b.HasOne("HubFurniture.Core.Entities.CategorySet", null)
                        .WithMany("ProductPictures")
                        .HasForeignKey("CategorySetId");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.Category", b =>
                {
                    b.Navigation("CategoryItems");

                    b.Navigation("CategoryItemsTypes");

                    b.Navigation("CategorySets");

                    b.Navigation("CategorySetsTypes");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItem", b =>
                {
                    b.Navigation("CustomerReviews");

                    b.Navigation("ProductPictures");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategoryItemType", b =>
                {
                    b.Navigation("CategoryItems");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.Navigation("CustomerReviews");

                    b.Navigation("ProductPictures");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySetType", b =>
                {
                    b.Navigation("CategorySets");
                });
#pragma warning restore 612, 618
        }
    }
}
