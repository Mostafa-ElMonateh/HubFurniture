// <auto-generated />
using System;
using HubFurniture.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HubFurniture.Repository.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240317204219_Adding CategoryId column to productItem table")]
    partial class AddingCategoryIdcolumntoproductItemtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HubFurniture.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategorySets");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CustomerReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCollectionId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("CustomerReviews");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Availability")
                        .HasColumnType("tinyint");

                    b.Property<int>("CategorySetId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Suitability")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategorySetId");

                    b.ToTable("ProductCollections");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Availability")
                        .HasColumnType("tinyint");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Suitability")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductCollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCollectionId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductPictures");
                });

            modelBuilder.Entity("ProductCollectionProductItem", b =>
                {
                    b.Property<int>("ProductCollectionsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductItemsId")
                        .HasColumnType("int");

                    b.HasKey("ProductCollectionsId", "ProductItemsId");

                    b.HasIndex("ProductItemsId");

                    b.ToTable("ProductCollectionProductItem");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", "Category")
                        .WithMany("CategorySets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CustomerReview", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.ProductCollection", null)
                        .WithMany("CustomerReviews")
                        .HasForeignKey("ProductCollectionId");

                    b.HasOne("HubFurniture.Core.Entities.ProductItem", null)
                        .WithMany("CustomerReviews")
                        .HasForeignKey("ProductItemId");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductCollection", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.CategorySet", "CategorySet")
                        .WithMany("ProductCollections")
                        .HasForeignKey("CategorySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategorySet");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductItem", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductPicture", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.ProductCollection", null)
                        .WithMany("ProductPictures")
                        .HasForeignKey("ProductCollectionId");

                    b.HasOne("HubFurniture.Core.Entities.ProductItem", null)
                        .WithMany("ProductPictures")
                        .HasForeignKey("ProductItemId");
                });

            modelBuilder.Entity("ProductCollectionProductItem", b =>
                {
                    b.HasOne("HubFurniture.Core.Entities.ProductCollection", null)
                        .WithMany()
                        .HasForeignKey("ProductCollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HubFurniture.Core.Entities.ProductItem", null)
                        .WithMany()
                        .HasForeignKey("ProductItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.Category", b =>
                {
                    b.Navigation("CategorySets");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.CategorySet", b =>
                {
                    b.Navigation("ProductCollections");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductCollection", b =>
                {
                    b.Navigation("CustomerReviews");

                    b.Navigation("ProductPictures");
                });

            modelBuilder.Entity("HubFurniture.Core.Entities.ProductItem", b =>
                {
                    b.Navigation("CustomerReviews");

                    b.Navigation("ProductPictures");
                });
#pragma warning restore 612, 618
        }
    }
}
